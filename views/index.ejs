<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>EOG Monitoring</title>

  <!-- load socket library from folder public/socket.io -->
  <script src="/socket.io/socket.io.js"></script>

  <!-- load chart.js library -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <!-- load bootstrap library -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>

</head>
<body>
  <div class="container text-center">
    <div class="row p-2">
      <div class="col-12">
        <h1>EOG Monitoring</h1>
      </div>
    </div>
    <div class="row p-2">
      <div class="col-12">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">Data</h5>
            <div class="chart-container" style="height:50vh;">
              <canvas id="chart"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="row p-2">
      <div class="col-6">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">Hasil Deteksi</h5>
            <h1>
              <span id="predict"></span>
            </h1>
          </div>
        </div>
      </div>
      <div class="col-6">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">Skor KSS</h5>
            <h1>
              <p id="score"></p>
            </h1>
            <p id="label"></p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    const socket = io(); // init socket
    const chart = new Chart(document.getElementById('chart'), {
      type: 'line',
      data: {
        labels: [],
        datasets: [{
          label: 'Data',
          data: [],
          borderColor: 'rgb(255, 99, 132)',
          tension:0.1
        }]
      },
      options: {
        maintainAspectRatio: false,
      }
    }); // show chart

    let lastTimestamp = null;

    // Listen for data updates
    socket.on('update', (data) => {
      data.reverse().forEach((item) => {
        if(lastTimestamp && item.createdAt <= lastTimestamp) return; // prevent data duplication
        // Add new data to chart
        const date = new Date(item.createdAt);
        chart.data.labels.push(`${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`); // only show time
        chart.data.datasets[0].data.push(item.data); // set the data
        if(chart.data.labels.length > 50) { // limit the data only 50 to show in chart
          chart.data.labels.shift(); // delete the first label
          chart.data.datasets[0].data.shift(); // delete the first data
        }
        chart.update(); // update the chart

        lastTimestamp = item.createdAt;
      });
    });

    // Listen for prediction updates
    socket.on('predict', (data) => {
      document.getElementById('predict').innerHTML = data.data.predict == 1 ? 'Mengantuk' : 'Siaga';
      document.getElementById('score').innerHTML = data.data.kss.score;
      document.getElementById('label').innerHTML = data.data.kss.label;
    });
  </script>
</body>
</html>
